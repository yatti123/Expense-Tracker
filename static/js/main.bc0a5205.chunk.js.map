{"version":3,"sources":["Modules/Home/OverviewComponent.js","Modules/Home/TransactionComponent.js","Modules/Home/index.js","App.js","index.js"],"names":["Container","styled","div","BalanceBox","AddTransaction","button","AddTransactionContainer","ExpenseInput","input","TxnTypeInput","RadioInput","ExpenseContainer","ExpenseContBox","ExpenseContValue","span","props","type","AddTransactionView","useState","amount","setAmount","desc","setDesc","setType","id","placeholder","name","value","onChange","e","target","checked","htmlFor","onClick","newBalance","currBal","currAmount","undefined","switchAddView","addTransaction","Date","now","OverviewComponent","isAddTxnVisible","toggleAddTxn","Balance","setBalance","ExpenseSum","transactions","reduce","sum","transaction","IncomeSum","prev","Transaction","txnType","SearchTransaction","TransactionComponent","searchedList","updateSearchedList","searchText","updateSearchText","filterData","trim","length","txn","filter","payload","toUpperCase","includes","useEffect","map","HomeComponent","updateTransactions","payLoad","prevTransactions","Header","App","Home","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bc0a5205.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  font-family: Montserrat;\r\n`;\r\n\r\nconst BalanceBox = styled.div`\r\n  font-size: 18px;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst AddTransaction = styled.button`\r\n  background: black;\r\n  color: white;\r\n  padding: 5px 10px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  font-size: 15px;\r\n  text-align: center;\r\n`;\r\n\r\nconst AddTransactionContainer = styled.div`\r\n  width: 100%;\r\n  padding: 15px 20px;\r\n  margin: 10px 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  border: 1px solid rgb(230, 232, 233);\r\n  border-radius: 4px;\r\n  gap: 10px;\r\n`;\r\n\r\nconst ExpenseInput = styled.input`\r\n  width: 90%;\r\n  padding: 10px 12px;\r\n  border: 1px solid rgb(230, 232, 233);\r\n  border-radius: 4px;\r\n  font-size: 15px;\r\n`;\r\n\r\nconst TxnTypeInput = styled.div`\r\n  width: 50%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 8px 0;\r\n  margin: 5px;\r\n`;\r\n\r\nconst RadioInput = styled.input`\r\n  margin: 0;\r\n`;\r\n\r\nconst ExpenseContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  margin: 20px;\r\n  gap: 12px;\r\n`;\r\n\r\nconst ExpenseContBox = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 135px;\r\n  border: 1px solid rgb(230, 232, 233);\r\n  padding: 15px 20px;\r\n  gap: 10px;\r\n  border-radius: 4px;\r\n`;\r\n\r\nconst ExpenseContValue = styled.span`\r\n  color: ${props => props.type === 'EXPENSE' ? 'red' : 'green'};\r\n  font-weight: bold;\r\n  font-size: 20px;\r\n`;\r\n\r\nconst AddTransactionView = (props) => {\r\n  const [amount, setAmount] = useState();\r\n  const [desc, setDesc] = useState();\r\n  const [type, setType] = useState('EXPENSE');\r\n\r\n  const addTransaction = ()=>{\r\n    let newBalance = props.currBal;\r\n    let currAmount = (amount !== undefined) ? amount : 0;\r\n    newBalance = (type==='EXPENSE') ? newBalance - currAmount : newBalance + currAmount;\r\n    props.switchAddView(newBalance);\r\n    if(amount && desc && type){\r\n      props.addTransaction({amount, desc, type, id: Date.now()});\r\n    }\r\n  }\r\n\r\n  return (\r\n    <AddTransactionContainer id=\"myForm\">\r\n      <ExpenseInput \r\n        type=\"number\"\r\n        placeholder=\"Amount\" \r\n        name=\"Amount\" \r\n        value={amount}\r\n        onChange={(e)=>setAmount(+(e.target.value))}/>\r\n      <ExpenseInput \r\n        type=\"text\" \r\n        placeholder=\"Description\" \r\n        name=\"Description\" \r\n        value={desc} \r\n        onChange={(e)=>setDesc(e.target.value)}/>\r\n      <TxnTypeInput>\r\n        <RadioInput\r\n          type=\"radio\"\r\n          value=\"EXPENSE\"\r\n          id=\"ExpenseButton\"\r\n          name=\"txnType\"\r\n          checked={type === 'EXPENSE'}\r\n          onChange={(e)=>setType(e.target.value)}\r\n        />\r\n        <label htmlFor=\"ExpenseButton\">Expense</label>\r\n        <RadioInput\r\n          type=\"radio\"\r\n          value=\"INCOME\"\r\n          id=\"IncomeButton\"\r\n          name=\"txnType\"\r\n          checked={type === 'INCOME'}\r\n          onChange={(e)=>setType(e.target.value)}\r\n        />\r\n        <label htmlFor=\"IncomeButton\">Income</label>\r\n      </TxnTypeInput>\r\n      <AddTransaction onClick={addTransaction}>Add Transaction</AddTransaction>\r\n    </AddTransactionContainer>\r\n  );\r\n};\r\n\r\nconst OverviewComponent = (props) => {\r\n  const [isAddTxnVisible, toggleAddTxn] = useState(false);\r\n  const [Balance, setBalance] = useState(0);\r\n\r\n  const toggleTxnView = (newBalance) => {\r\n    setBalance(newBalance);\r\n    toggleAddTxn((prev) => !prev);\r\n  }\r\n\r\n  const ExpenseSum = props.transactions.reduce((sum,transaction) => {\r\n    if(transaction.type === 'EXPENSE'){\r\n      sum += (transaction.amount || 0);\r\n    };\r\n    return sum;\r\n  },0);\r\n\r\n  const IncomeSum = props.transactions.reduce((sum,transaction) => {\r\n    if(transaction.type === 'INCOME'){\r\n      sum += transaction.amount;\r\n    };\r\n    return sum;\r\n  },0);\r\n\r\n\r\n  return (\r\n    <Container>\r\n      <BalanceBox>\r\n        Balance: ${Balance}\r\n        <AddTransaction onClick={() => toggleAddTxn((prev) => !prev)}>\r\n          {isAddTxnVisible ? \"Cancel\" : \"ADD\"}\r\n        </AddTransaction>\r\n      </BalanceBox>\r\n      {isAddTxnVisible && <AddTransactionView switchAddView={toggleTxnView} currBal={Balance} addTransaction={props.addTransaction}/>}\r\n      <ExpenseContainer>\r\n        <ExpenseContBox>\r\n          Expense\r\n          <ExpenseContValue type={'EXPENSE'}>${ExpenseSum}</ExpenseContValue>\r\n        </ExpenseContBox>\r\n        <ExpenseContBox>\r\n          Income\r\n          <ExpenseContValue type={'INCOME'}>${IncomeSum}</ExpenseContValue>\r\n        </ExpenseContBox>\r\n      </ExpenseContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default OverviewComponent;\r\n","import styled from 'styled-components';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-family: Montserrat;\r\n  padding: 10px 22px;\r\n  font-size: 18px;\r\n  gap: 10px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst Transaction = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 10px 15px;\r\n  gap: 10px;\r\n  border-width: 1px 4px 1px 1px;\r\n  border-style: solid;\r\n  border-color: rgb(230, 232, 233) ${props => props.txnType === 'EXPENSE' ? 'red' : 'green'} rgb(230, 232, 233) rgb(230, 232, 233);\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n  font-weight: normal;\r\n`;\r\n\r\nconst SearchTransaction = styled.input`\r\n  border-radius: 10px;\r\n  padding: 10px 12px;\r\n  background-color: rgb(230, 232, 233);\r\n  border: none;\r\n`;\r\n\r\nconst TransactionComponent = props =>{\r\n  const [searchedList, updateSearchedList] = useState(props.transactions);\r\n  const [searchText, updateSearchText] = useState(\"\");\r\n\r\n  //We call filterData function 2 times, when search text is changed and when new item is added and this component is re rendered\r\n  const filterData = (searchText) => {\r\n    //if search text is empty\r\n    if(!searchText || !searchText.trim().length){\r\n      updateSearchedList(props.transactions);\r\n      return;\r\n    }\r\n\r\n    let txn = [...props.transactions];\r\n    txn = txn.filter(payload => payload.desc.toUpperCase().includes(searchText.toUpperCase().trim()));\r\n    updateSearchedList(txn);\r\n  }\r\n\r\n  //use useEffect here, because when we add new item props.transactions is updated but searchedList is not updated with new value,\r\n  //it remains old array list only.So, calling useEffect when props.transactions gets udated and update searchedList with props.transactions\r\n  useEffect(()=>filterData(searchText), [props.transactions]);\r\n  \r\n    return (\r\n        <Container>\r\n           Transactions\r\n          <SearchTransaction type=\"text\" placeholder='Search' value={searchText} onChange={(e)=>{\r\n            updateSearchText(e.target.value);\r\n            filterData(e.target.value);\r\n            }}/>\r\n          {searchedList.map((transaction) => (\r\n                      <Transaction key={transaction.id} txnType={transaction.type}>\r\n                        <span>{transaction.desc}</span>\r\n                        <span>${transaction.amount}</span>\r\n                      </Transaction>\r\n          ))}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default TransactionComponent;","import styled from 'styled-components';\r\nimport { useState } from 'react';\r\nimport OverviewComponent from './OverviewComponent';\r\nimport TransactionComponent from './TransactionComponent';\r\n\r\nconst Container = styled.div`\r\n  width: 360px;\r\n  padding: 10px 22px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: 30px 0 10px;\r\n  font-family: Montserrat;\r\n`;\r\n\r\nconst HomeComponent = props =>{\r\n  const [transactions, updateTransactions] = useState([]);\r\n  const addTransaction = (payLoad) =>{\r\n    updateTransactions(prevTransactions =>{\r\n      return [...prevTransactions, payLoad];\r\n    });\r\n  };\r\n\r\n    return (\r\n        <Container>\r\n          <OverviewComponent addTransaction={addTransaction} transactions={transactions}/>\r\n          {transactions.length > 0 && <TransactionComponent transactions={transactions}/>}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default HomeComponent;","import styled from 'styled-components';\nimport HomeComponent from './Modules/Home';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 30px 0 10px;\n  font-family: Montserrat;\n`;\n\nconst Header = styled.span`\n  color: black;\n  font-size: 25px;\n  font-weight: bold;\n`;\n\nfunction App() {\n  return (\n    <Container>\n      <Header>Expense Tracker</Header>\n      <HomeComponent />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}